openapi: 3.0.0
info:
  title: Entity-Management-Service
  version: 1.0.0
  description: '* This API enables the creation and management of various entities .It provides functionalities for entities, ensuring seamless integration and maintenance of entity-related data across the platform.'
  contact:
    email: tech-infra@shikshalokam.org
servers:
  - url: http://localhost:5001
    description: local server
  - url: https://dev.elevate-apis.shikshalokam.org
    description: dev server
paths:
  /v1/entityTypes/bulkCreate:
    post:
      operationId: ''
      summary: 'bulkCreate create entityType '
      tags:
        - entityType-API's
      description: >-
        This api is use to create entity types in bulk by passing a csv file which contain entity information


        * The API Endpoint for creating a form is `/v1/entityType/bulkCreate`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_0
            type: string
          required: true
      responses:
        '200':
          headers: {}
          content:
            text:
              schema:
                type: array
                items:
                  type: string
              examples:
                SuccessResponse:
                  value: |-
                    "name",
                    "registry-name",
                    "isObservable",
                    "toBeMappedToParentEntities",
                    "immediateChildrenEntityType",
                    "registryDetails",
                    "_SYSTEM_ID",
                    "status"
                    "blockkks",
                    "locationRegistry",
                    true,
                    true,
                    "[""school""]",
                    "{""name"":""locationRegistry""}",
                    "6679320261add28f7f681294",
                    "SUCCESS"
        '400':
          description: Bad Request
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityTypes
                        msg: EntityTypes file is required
    parameters: []
  /v1/entityTypes/bulkUpdate:
    post:
      operationId: ''
      summary: 'BulkUpdate create entityType '
      tags:
        - entityType-API's
      description: >-
        You can use this API to update entityType by passing CSV file.


        * The API Endpoint for updating a form is `/v1/entityTypes/bulkUpdate`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_0
          required: true
      requestBody: {}
      responses:
        '200':
          description: ok
          content:
            text:
              schema:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: boolean
                    - type: boolean
                    - type: string
                    - type: string
                    - type: string
                    - type: string
              examples:
                SuccessResponse:
                  value: |-
                    "name",
                    "registryname",
                    "isObservable",
                    "toBeMappedToParentEntities",
                    "immediateChildrenEntityType",
                    "_SYSTEM_ID",
                    "status"
                    "ghj",
                    "locationRegistry",
                    true,
                    true,
                    "[""[\""school\"""",
                    "" “high School”
                    ]""
                    ]","6679320261add28f7f681294","SUCCESS"
        '400':
          description: Bad Request
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityTypes
                        msg: EntityTypes file is required
  /v1/entityTypes/create:
    post:
      operationId: ''
      summary: This api will reate's Single entity Type data
      tags:
        - entityType-API's
      description: >-
        You can use this API to create a single entityType data.


        * The API Endpoint to read form data is `/v1/entityTypes/create/`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_1
            type: string
          required: true
      requestBody:
        content:
          application.json:
            schema:
              type: object
              properties:
                name:
                  type: string
                registryDetails:
                  type: object
                  properties:
                    name:
                      type: string
                isObservable:
                  type: boolean
                toBeMappedToParentEntities:
                  type: boolean
            examples:
              sampleBodyData:
                value:
                  name: state
                  registryDetails:
                    name: state
                  isObservable: true
                  toBeMappedToParentEntities: true
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      name:
                        type: string
                      isObservable:
                        type: boolean
                      toBeMappedToParentEntities:
                        type: boolean
                      immediateChildrenEntityType:
                        type: array
                        items:
                          type: string
                      status:
                        type: string
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_INFORMATION_CREATED
                    status: 200
                    result:
                      name: state
                      isObservable: true
                      toBeMappedToParentEntities: true
                     
                      status: SUCCESS
        '400':
          description: Bad Request
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: name
                        msg: required name
  /v1/entityTypes/update/_id:
    post:
      summary: Update single entities based on the Id's
      tags:
        - entityType-API's
      description: >-
        You can use this API to update single entities based on the Id passing.


        * The API Endpoint for creating a user entity is
        `/v1/entityTypes/update`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_1
          required: true
        - in: query
          name: _id
          description: ''
          schema: &ref_3
            type: string
          required: true
      requestBody:
        content:
          application.json:
            schema:
              type: object
              properties:
                name:
                  type: string
                registryDetails:
                  type: object
                  properties:
                    name:
                      type: string
                isObservable:
                  type: boolean
                toBeMappedToParentEntities:
                  type: boolean
                immediateChildrenEntityType:
                  type: string
            examples:
              sampleBodyData:
                value:
                  name: school
                  registryDetails:
                    name: hub
                  isObservable: true
                  toBeMappedToParentEntities: true
                  immediateChildrenEntityType: collage
      responses:
        '200':
          description: Created
          content:
            application.json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      profileForm:
                        type: array
                        items:
                          type: string
                      profileFields:
                        type: array
                        items:
                          type: string
                      types:
                        type: array
                        items:
                          type: string
                      callResponseTypes:
                        type: array
                        items:
                          type: string
                      isObservable:
                        type: boolean
                      immediateChildrenEntityType:
                        type: array
                        items:
                          type: string
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      deleted:
                        type: boolean
                      _id:
                        type: string
                      isDeleted:
                        type: boolean
                      name:
                        type: string
                      registryDetails:
                        type: object
                        properties:
                          name:
                            type: string
                      toBeMappedToParentEntities:
                        type: boolean
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                      __v:
                        type: number
              examples:
                SuccessResponse:
                  value:
                    status: 200
                    result:
                      profileForm: []
                      profileFields: []
                      types: []
                      callResponseTypes: []
                      isObservable: true
                      immediateChildrenEntityType:
                        - collage
                      createdBy: SYSTEM
                      updatedBy: SYSTEM
                      deleted: false
                      _id: 662f7d733f9b670521cadcff
                      isDeleted: false
                      name: school
                      registryDetails:
                        name: hub
                      toBeMappedToParentEntities: true
                      updatedAt: '2024-04-30T12:37:26.775Z'
                      createdAt: '2024-04-29T10:58:59.862Z'
                      __v: 0
        '400':
          description: Bad Request. User Entity already exists.
          content:
            application.json:
              schema: null
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required _id
                      - location: body
                        param: name
                        msg: required name
    parameters:
      - in: path
        name: ''
        description: ''
        schema:
          type: string
  /v1/entityTypes/list:
    get:
      summary: This api will list all entityTypes
      tags:
        - entityType-API's
      description: >-
        Use this API to list all entityTypes


        * The API Endpoint to fetch all the list in entityType.
        `/v1/entityTypes/list`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token, which is available in
            the login API response.
          required: true
          schema:
            type: string
      requestBody: {}
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                      required:
                        - _id
                        - name
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_TYPES_FETCHED
                    status: 200
                    result:
                      - _id: 661384681797bc00de520555
                        name: school
                      - _id: 661387f572fad002e57cce8f
                        name: school
        '400':
          description: Bad Request. User Entity Not Found
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message: Bad request
  /v1/entityTypes/find:
    post:
      summary: find the entityTypes
      tags:
        - entityType-API's
      description: >-
        Use this API to get the details of entityType data.


        * The API Endpoint for reading the details of the user entity is
        `/v1/entityTypes/find`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token, which is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_2
            type: string
          required: true
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                      required:
                        - _id
                        - name
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_TYPES_FETCHED
                    status: 200
                    result:
                      - _id: 662f7dafcf215405591ce3af
                        name: state
                      - _id: 661387f572fad002e57cce8f
                        name: block
        '400':
          headers: {}
          content:
            application/json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: query
                        msg: required name
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: object
                  properties:
                    name:
                      type: string
                projection:
                  type: object
                  properties:
                    _id:
                      type: number
                    name:
                      type: number
                skipFields:
                  type: object
                  properties:
                    createdAt:
                      type: number
            examples:
              sampleBodyData:
                value:
                  query:
                    name: school
                  projection:
                    _id: 1
                    name: 1
                  skipFields:
                    createdAt: 1
    parameters: []
  /v1/entities/bulkCreate?type={entity_type}:
    post:
      summary: Bulk creation of entites
      tags:
        - entities-API's
      description: >-
        You can use this API to create bulk entities based on type and CSV file
        we pass.


        * The API Endpoint for deleting a user entity is
        `/v1/entities/bulkCreate`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: query
          name: type
          description: type we need to pass to match the entityType
          schema: *ref_2
          required: true
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_2
          required: true
      responses:
        '200':
          description: Accepted
          content:
            text:
              schema:
                type: array
                items:
                  type: string
              examples:
                SuccessResponse:
                  value: |-
                    "Staff_id",
                    "externalId",
                    "name",
                    "region",
                    "capital",
                    "_arrayFields",
                    "_existingKeyField",
                    "_SYSTEM_ID"
                    "",
                    "PBS",
                    "Punjab",
                    "North east",
                    "Chandigarh",
                    "",
                    "externalId",
                    "6679336f61add28f7f681298"
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entities
                        msg: entities file is required
  /v1/entities/bulkUpdate:
    post:
      summary: Bulk updates of entities
      tags:
        - entities-API's
      description: >-
        You can use this API to entities data based on the type and ID we pass
        throw CSV file  that contain information to update.


        * The API Endpoint for updating entities by passing csv file
        `/v1/entities/bulkUpdate`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          required: true
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
        - in: header
          name: content-type
          description: ''
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ok
          content:
            text:
              schema:
                type: array
                items:
                  type: string
              examples:
                SuccessResponse:
                  value: |-
                    "externalId",
                    "name",
                    "region",
                    "capital",
                    "_arrayFields",
                    "_existingKeyField",
                    "_SYSTEM_ID",
                    "UPDATE_STATUS"
                    "entity506",
                    "bijapur",
                    "North east",
                    "Chandigarh",
                    "",
                    "externalId",
                    "6679336f61add28f7f681298",
                    "SUCCESS"
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entities
                        msg: entities file is required
      requestBody:
        description: ''
  /v1/entities/add?type={entity_type}:
    post:
      summary: add single entities
      tags:
        - entities-API's
      description: >-
        The API is used to create single entities creation based on type


        * The API Endpoint to create single entities creation based on type
        `/v1/entities/add`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          description: Please append a valid entitie Id to the Request URL.
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
      responses:
        '200':
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        childHierarchyPath:
                          type: array
                          items:
                            type: string
                        allowedRoles:
                          type: array
                          items:
                            type: string
                        createdBy:
                          type: string
                        updatedBy:
                          type: string
                        _id:
                          type: string
                        deleted:
                          type: boolean
                        entityTypeId:
                          type: string
                        entityType:
                          type: string
                        registryDetails:
                          type: object
                          properties:
                            locationId:
                              type: string
                            code:
                              type: string
                        metaInformation:
                          type: object
                          properties:
                            externalId:
                              type: string
                        updatedAt:
                          type: string
                        createdAt:
                          type: string
                        __v:
                          type: number
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_ADDED
                    status: 200
                    result:
                      - childHierarchyPath:
                          - district
                          - beat
                          - cluster
                          - school
                          - block
                        allowedRoles: []
                        createdBy: SYSTEM
                        updatedBy: SYSTEM
                        _id: 6634b0767411a605fdbaca71
                        deleted: false
                        entityTypeId: 5f32d8228e0dc83124040567
                        entityType: school
                        registryDetails:
                          locationId: entity123
                          code: entity123
                        metaInformation:
                          externalId: entity123
                        updatedAt: '2024-05-03T09:37:58.425Z'
                        createdAt: '2024-05-03T09:37:58.425Z'
                        __v: 0
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityTypeId
                        msg: 'required entityTypeId '
                      - location: body
                        param: externalId
                        msg: 'required externalId '
                      - location: body
                        param: name
                        msg: 'required name '
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                entityTypeId:
                  type: string
                externalId:
                  type: string
                entityType:
                  type: string
                childHierarchyPath:
                  type: array
                  items:
                    type: string
                allowedRoles:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  entityTypeId: 663335e2a766490014aead0a
                  externalId: entity123
                  childHierarchyPath:
                    - district
                    - beat
                    - cluster
                    - school
                    - block
                  allowedRoles:
                    - role1
                    - role2
  /v1/entities/details/{_id}:
    get:
      summary: Provide details of an entities based on entitie ID.
      tags:
        - entities-API's
      description: >-
        You can use this API to get details based on ID.

        * The API to get details of an entities based on entitie ID: `/v1/entities/details`
        
        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - in: path
          name: _id
          required: true
          description: Please append a valid entitie id to the Request URL..
          schema:
            type: string
          example: 1
        - in: 
          schema: &ref_4
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        childHierarchyPath:
                          type: array
                          items:
                            type: string
                        allowedRoles:
                          type: array
                          items:
                            type: string
                        createdBy:
                          type: string
                        updatedBy:
                          type: string
                        deleted:
                          type: boolean
                        entityTypeId:
                          type: string
                        entityType:
                          type: string
                        metaInformation:
                          type: object
                          properties:
                            externalId:
                              type: string
                        updatedAt:
                          type: string
                        createdAt:
                          type: string
                        __v:
                          type: number
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_INFORMATION_FETCHED
                    status: 200
                    result:
                      - _id: 662f856a4b41910591c2fde9
                        childHierarchyPath: []
                        allowedRoles:
                          - role1
                          - role2
                        createdBy: user123
                        updatedBy: user123
                        deleted: false
                        entityTypeId: 627a13928ce12806f5803f57
                        entityType: block
                        metaInformation:
                          externalId: entity123
                        updatedAt: '2024-04-30T13:16:23.597Z'
                        createdAt: '2024-04-29T11:32:58.439Z'
                        __v: 0
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required state location id
  /v1/entities/update/{_id}:
    post:
      summary: Update single entities
      tags:
        - entities-API's
      description: >-
        You can use this API to update single entities data


        * The API Endpoint to update single entities : `/v1/entities/update`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API., which is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entities Id to the Request URL..
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_3
          required: true
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      metaInformation:
                        type: object
                        properties:
                          externalId:
                            type: string
                      childHierarchyPath:
                        type: array
                        items:
                          type: string
                      allowedRoles:
                        type: array
                        items:
                          type: string
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      deleted:
                        type: boolean
                      _id:
                        type: string
                      entityTypeId:
                        type: string
                      entityType:
                        type: string
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                      __v:
                        type: number
              examples:
                SuccessResponse:
                  value:
                    message: ASSETS_FETCHED_SUCCESSFULLY
                    status: 200
                    result:
                      metaInformation:
                        externalId: entity123
                      childHierarchyPath: []
                      allowedRoles:
                        - role1
                        - role2
                      createdBy: user123
                      updatedBy: user123
                      deleted: false
                      _id: 662f856a4b41910591c2fde9
                      entityTypeId: 627a13928ce12806f5803f57
                      entityType: block
                      updatedAt: '2024-04-30T13:16:23.597Z'
                      createdAt: '2024-04-29T11:32:58.439Z'
                      __v: 0
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: externalId
                        msg: required externalId
                      - location: params
                        param: _id
                        msg: required _id
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                externalId:
                  type: string
                name:
                  type: string
                childHierarchyPath:
                  type: array
                  items:
                    type: string
                allowedRoles:
                  type: array
                  items:
                    type: string
                createdBy:
                  type: string
                updatedBy:
                  type: string
            examples:
              sampleBodyData:
                value:
                  externalId: entity123
                  name: ' school'
                  childHierarchyPath: []
                  allowedRoles:
                    - role1
                    - role2
                  createdBy: user123
                  updatedBy: user123
  /v1/entities/mappingUpload:
    post:
      summary: This endpoint will map its childEntity to its parentEntity
      tags:
        - entities-API's
      description: >-
        You can use this API to map the childEntity to parentEntity


        * The API Endpoint will map its childEntity to its parentEntity
        `/v1/entities/mappingUpload`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_4
          required: true
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      success:
                        type: boolean
                      message:
                        type: string
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_INFORMATION_UPDATE
                    status: 200
                    result:
                      success: true
                      message: ENTITY_INFORMATION_UPDATE
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityMap
                        msg: entityMap file is required
  /v1/entities/listByEntityType/{_id}:
    get:
      summary: You can use this API to list entities based on its type
      tags:
        - entities-API's
      description: >-
        You can use this API to list entities based on its type


        * The API Endpoint to list entities based on its type:
        `v1/entities/listByEntityType/_id`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entitie id to the Request URL.
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_4
          required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        externalId:
                          type: string
                        name:
                          type: string
                        locationId:
                          type: string
                        _id:
                          type: string
                      required:
                        - externalId
                        - name
                        - locationId
                        - _id
              examples:
                SuccessResponse:
                  value:
                    message: ASSETS_FETCHED_SUCCESSFULLY
                    status: 200
                    result:
                      - externalId: PBS
                        name: Punjab
                        locationId: ''
                        _id: 6613b8142c7d9408449474bf
                      - externalId: PBS
                        name: Punjab
                        locationId: ''
                        _id: 6613b8f32c7d9408449474c2
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required Entity type
  /v1/entities/find:
    post:
      summary: find the entities based on queries
      tags:
        - entities-API's
      description: >-
        You can use this API to find entities based on query.


        * The API Endpoint for finding entities based on query: `/v1/entities/find`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_4
          required: true
      requestBody:
        content:
          application.json:
            schema:
              type: object
              properties:
                query:
                  type: object
                  properties:
                    metaInformation.externalId:
                      type: string
                projection:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  query:
                    metaInformation.externalId: PBS
                  projection:
                    - _id
      responses:
        '200':
          description: created
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                      required:
                        - _id
              examples:
                SuccessResponse:
                  value:
                    message: ASSETS_FETCHED_SUCCESSFULLY
                    status: 200
                    result:
                      - _id: 6613b8142c7d9408449474bf
                      - _id: 6613b8f32c7d9408449474c2
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: query
                        msg: required query
  /v1/entities/list/_id?page={page_no}&limit={page_limit}&type={entity_type}:
    get:
      summary: list entities based on ID
      tags:
        - entities-API's
      description: >-
        You can use this API to list the entities based on ID and entity Type


        * The API Endpoint for listing the entities based on ID and entity Type: `/v1/entities/list`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entitie Id to the Request URL.
          schema:
            type: string
          example: 1
        - in: path
          name: page
          description: ''
          schema: *ref_4
          required: false
        - in: path
          name: limit
          description: ''
          schema: *ref_4
          required: false
        - in: path
          name: type
          description: ''
          schema: *ref_4
          required: true
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_4
          required: true
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            entityType:
                              type: string
                            externalId:
                              type: string
                            label:
                              type: string
                            value:
                              type: string
                      count:
                        type: number
              examples:
                SuccessResponse:
                  value:
                    status: 200
                    result:
                      data:
                        - _id: 627a13928ce12806f5803f57
                          entityType: school
                          externalId: entity123
                          label: undefined - entity123
                          value: 627a13928ce12806f5803f57
                      count: 1
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: query
                        param: type
                        msg: required type
                      - location: params
                        param: _id
                        msg: required entity id
  /v1/entities/relatedEntities/_id:
    get:
      summary: get related entities based on ID
      tags:
        - entities-API's
      description: >-
        You can use this API to get the realted entities data based on ID


        * The API Endpoint to get the realted entities data based on ID:
        `/v1/entities/relatedEntities`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entitie Id to the Request URL.
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      relatedEntities:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            entityTypeId:
                              type: string
                            entityType:
                              type: string
                            metaInformation:
                              type: object
                              properties:
                                externalId:
                                  type: string
                                name:
                                  type: string
                          required:
                            - _id
                            - entityTypeId
                            - entityType
                            - metaInformation
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_FETCHED
                    status: 200
                    result:
                      relatedEntities:
                        - _id: 6613b8142c7d9408449474bf
                          entityTypeId: 661384681797bc00de520555
                          entityType: teacher
                          metaInformation:
                            externalId: PBS
                            name: Punjab
                        - _id: 6613b8f32c7d9408449474c2
                          entityTypeId: 661384681797bc00de520555
                          entityType: school
                          metaInformation:
                            externalId: PBS
                            name: Punjab
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required Entity id
  /v1/entities/listByLocationIds:
    get:
      summary: list the entities based on location ID
      tags:
        - entities-API's
      description: >-
        You can use this API to get entities based on locations Id


        * Endpoint to get entities based on locations Id `/v1/entities/listByLocationIds`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_5
            type: string
      responses:
        '200':
          description: OK
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        entityTypeId:
                          type: string
                        entityType:
                          type: string
                        registryDetails:
                          type: object
                          properties:
                            locationId:
                              type: string
                            code:
                              type: string
                        metaInformation:
                          type: object
                          properties:
                            externalId:
                              type: string
                      required:
                        - _id
                        - entityTypeId
                        - entityType
                        - registryDetails
                        - metaInformation
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_FETCHED
                    status: 200
                    result:
                      - _id: 5f33c3d85f637784791cd830
                        entityTypeId: 5f32d8228e0dc8312404056e
                        entityType: state
                        metaInformation:
                          externalId: MH
                          name: Maharashtra
                          region: West
                          capital: Mumbai
                        registryDetails:
                          locationId: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
                          code: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
                      - _id: 627a13928ce12806f5803f57
                        entityTypeId: 5f32d8228e0dc8312404056e
                        entityType: block
                        metaInformation:
                          externalId: MH
                          name: Maharashtra
                          region: West
                          capital: Mumbai
                        registryDetails:
                          locationId: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
                          code: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: string
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: locationIds
                        msg: Location ids is required
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                locationIds:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  locationIds:
                    - entity44123
  /v1/entities/subEntityListBasedOnRoleAndLocation/{_id}:
    get:
      summary: list all the entities based on location ID
      tags:
        - entities-API's
      description: >-
        You can use this API to  list entity based on location ID

        *Endpoint to list entity based on location ID
        `/v1/entities/subEntityListBasedOnRoleAndLocation`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entitie Id To the Request URL
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_5
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        childHierarchyPath:
                          type: array
                          items:
                            type: string
                      required:
                        - _id
                        - childHierarchyPath
              examples:
                SuccessResponse:
                  value:
                    message: ENTITIES_CHILD_HIERACHY_PATH
                    status: 200
                    result:
                      - _id: 5fd1b52ab53a6416aaeefb1f
                        childHierarchyPath:
                          - school
                          - cluster
                      - _id: 6153158e5bec1d28882358ab
                        childHierarchyPath:
                          - school
                          - cluster
                          - state
                          - district
                          - beat
                          - block
        '400':
          description: Bad Request.
          content:
            application.json:
              schema: null
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required state location id
  /v1/entities/subEntityList/{_id}?type={entity_type}&search=&page={page_no}&limit={page_limit}:
    get:
      summary: will provide the sub entity based on types
      tags:
        - entities-API's
      description: >-
        This API will help to get entities based on parent id and entity type we pass.

        This API will help to get entities based on parent id and entity type we pass.
        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: page
          description: Please add page number
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: number of record to limit
          schema:
            type: number
          example: 2
        - in: path
          name: type
          description: ''
          schema: *ref_5
        - in: path
          name: serach
          description: ''
          schema: *ref_5
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_5
          required: true
        - in: path
          name: _id
          description: ''
          schema: *ref_3
          required: true
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            entityType:
                              type: string
                            externalId:
                              type: string
                            label:
                              type: string
                            value:
                              type: string
                            name:
                              type: string
                          required:
                            - _id
                            - entityType
                            - externalId
                            - label
                            - value
                      count:
                        type: number
              examples:
                Success Response:
                  value:
                    status: 200
                    result:
                      data:
                        - _id: 627a13928ce12806f5803f57
                          entityType: school
                          externalId: entity123
                          label: undefined - entity123
                          value: 627a13928ce12806f5803f57
                      count: 1
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: query
                        param: type
                        msg: required type
                      - location: params
                        param: _id
                        msg: required _id
  /v1/entities/listByIds:
    get:
      summary: list the entities based on ID
      tags:
        - entities-API's
      description: >-
        This API will help to list the entities based on ID's


        * The API Endpoint to list the entities based on ID's `/v1/entities/listByIds`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_5
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        entityType:
                          type: string
              examples:
                SuccessResponse:
                  value:
                    message: ENTITIES_FETCHED
                    status: 200
                    result:
                      - _id: 66738b75c05aa58f89ba1300
                        entityType: block
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entities
                        msg: required entities
