openapi: 3.0.0
info:
  title: Entity-Management-Service
  version: 1.0.0
  description: >-
    * This Service enables the creation and management of various entities and
    entityType .It provides functionalities for entities, ensuring seamless
    integration and maintenance of entity-related data across the platform.


    **🔐 Note for Admin/System Admin:**  

    When accessing APIs as an **Admin** or **System Admin**, include the
    following headers in your request:


    | **Header Name**         | **Description**                  | **Example
    Value**          |

    |-------------------------|----------------------------------|----------------------------|

    | `admin-auth-token`      | Admin-specific auth token        |
    `{admin-auth-token}`       |

    | `tenantId`              | Tenant identifier                |
    `shikshagraha`             |

    | `orgId`                 | Organization ID                  | `blr`
  contact:
    email: tech-infra@shikshalokam.org
servers:
  - url: http://{{baseurl}}/entity-management
    description: local server
  - url: https://dev.elevate-apis.shikshalokam.org
    description: dev server
paths:
  /v1/entityTypes/bulkCreate:
    post:
      summary: 'BulkCreate create entity type '
      tags:
        - entityType-API's
      description: >-
        This api is use to create entity types in bulk by passing a csv file
        which contain entity type information

        * The API Endpoint for creating entity types in bulk by passing a csv
        file which contain entity type information is
        `/v1/entityType/bulkCreate`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_1
            type: string
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_0
            type: string
          required: true
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_0
          required: true
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_0
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The CSV file to upload
      responses:
        '200':
          headers: {}
          content:
            text:
              schema:
                type: array
                items:
                  type: string
              examples:
                SuccessResponse:
                  value: |-
                    "name",
                    "registry-name",
                    "isObservable",
                    "toBeMappedToParentEntities",
                    "immediateChildrenEntityType",
                    "registryDetails",
                    "tenantId",
                    "orgId",
                    "_SYSTEM_ID",
                    "status"
                    "blockkks",
                    "locationRegistry",
                    true,
                    true,
                    "[""school""]",
                    "{""name"":""locationRegistry""}",
                    "shikshagraha",
                    "orgId",
                    "6679320261add28f7f681294",
                    "SUCCESS"
        '400':
          description: Bad Request
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityTypes
                        msg: EntityTypes file is required
    parameters: []
  /v1/entityTypes/bulkUpdate:
    post:
      summary: 'BulkUpdate create entityType '
      tags:
        - entityType-API's
      description: >-
        You can use this API to update entityType by passing CSV file.


        * The API Endpoint for updating entityType by passing CSV file is
        `/v1/entityTypes/bulkUpdate`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_1
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: *ref_0
          required: true
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_0
          required: true
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_0
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The CSV file to upload
      responses:
        '200':
          description: ok
          content:
            text:
              schema:
                type: array
                items:
                  oneOf:
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: string
                    - type: boolean
                    - type: boolean
                    - type: string
                    - type: string
                    - type: string
                    - type: string
              examples:
                SuccessResponse:
                  value: |-
                    "name",
                    "registryname",
                    "isObservable",
                    "toBeMappedToParentEntities",
                    "immediateChildrenEntityType",
                    "tenantId",
                    "orgId",
                    "_SYSTEM_ID",
                    "status",
                    "ghj",
                    "locationRegistry",
                    true,
                    true,
                    "[""[\""school\"""",
                    "" “high School”
                    ]""
                    ]",
                    "shikshagraha",
                    "blr",
                    "6679320261add28f7f681294","SUCCESS",
        '400':
          description: Bad Request
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityTypes
                        msg: EntityTypes file is required
  /v1/entityTypes/create:
    post:
      summary: This api will create's Single entity Type data
      tags:
        - entityType-API's
      description: >-
        You can use this API to create a single entityType data.


        * The API Endpoint to create a single entityType data is
        `/v1/entityTypes/create`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_3
            type: string
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_2
            type: string
          required: true
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_2
          required: true
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_2
          required: true
      requestBody:
        content:
          application.json:
            schema:
              type: object
              properties:
                name:
                  type: string
                registryDetails:
                  type: object
                  properties:
                    name:
                      type: string
                isObservable:
                  type: boolean
                toBeMappedToParentEntities:
                  type: boolean
            examples:
              sampleBodyData:
                value:
                  name: state
                  registryDetails:
                    name: govt school
                  isObservable: true
                  toBeMappedToParentEntities: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      name:
                        type: string
                      isObservable:
                        type: boolean
                      toBeMappedToParentEntities:
                        type: boolean
                      tenantId:
                        type: string
                      orgId:
                        type: string
                      status:
                        type: string
                      _id:
                        type: string
        '400':
          description: Bad Request
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: name
                        msg: required name
  /v1/entityTypes/update/{_id}:
    post:
      summary: Update single entities based on the entityType id
      tags:
        - entityType-API's
      description: >-
        You can use this API to update single entities based on the entityType
        id .


        * The API Endpoint to update single entities based on the entityType id
        is `/v1/entityTypes/update/{_id}`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_3
          required: true
        - in: query
          name: _id
          description: >-
            The unique identifier for the data that needs to be updated. This id
            ensures the correct record is matched for the update operation.
          schema: &ref_5
            type: string
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_4
            type: string
          required: true
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_4
          required: true
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_4
          required: true
      requestBody:
        content:
          application.json:
            schema:
              type: object
              properties:
                name:
                  type: string
                registryDetails:
                  type: object
                  properties:
                    name:
                      type: string
                isObservable:
                  type: boolean
                toBeMappedToParentEntities:
                  type: boolean
                immediateChildrenEntityType:
                  type: string
            examples:
              sampleBodyData:
                value:
                  name: school
                  registryDetails:
                    name: hub
                  isObservable: true
                  toBeMappedToParentEntities: true
                  immediateChildrenEntityType: collage
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      profileForm:
                        type: array
                        items:
                          type: string
                      profileFields:
                        type: array
                        items:
                          type: string
                      types:
                        type: array
                        items:
                          type: string
                      callResponseTypes:
                        type: array
                        items:
                          type: string
                      isObservable:
                        type: boolean
                      immediateChildrenEntityType:
                        type: array
                        items:
                          type: string
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      deleted:
                        type: boolean
                      _id:
                        type: string
                      isDeleted:
                        type: boolean
                      name:
                        type: string
                      registryDetails:
                        type: object
                        properties:
                          name:
                            type: string
                      toBeMappedToParentEntities:
                        type: boolean
                      tenantId:
                        type: string
                      orgId:
                        type: string
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                      __v:
                        type: number
        '400':
          description: Bad Request. User Entity already exists.
          content:
            application.json:
              schema: null
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required _id
                      - location: body
                        param: name
                        msg: required name
    parameters:
      - in: path
        name: ''
        description: ''
        schema:
          type: string
  /v1/entityTypes/list:
    get:
      summary: This API can be used to list all entity types
      tags:
        - entityType-API's
      description: >-
        Use this API to list all entityTypes


        * The API Endpoint to fetch all the list in entityType.
        `/v1/entityTypes/list`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token, which is available in
            the login API response.
          required: true
          schema:
            type: string
      requestBody: {}
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                      required:
                        - _id
                        - name
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_TYPES_FETCHED
                    status: 200
                    result:
                      - _id: 661384681797bc00de520555
                        name: district
                      - _id: 661387f572fad002e57cce8f
                        name: state
        '400':
          description: Bad Request. User Entity Not Found
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message: Bad request
  /v1/entityTypes/find:
    post:
      summary: Find the entityTypes
      tags:
        - entityType-API's
      description: >-
        Use this API to get the details of entityType data based on the request
        body passed.


        * The API Endpoint for reading the details of the entity type is
        `/v1/entityTypes/find`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token, which is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        name:
                          type: string
                      required:
                        - _id
                        - name
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_TYPES_FETCHED
                    status: 200
                    result:
                      - _id: 662f7dafcf215405591ce3af
                        name: state
                      - _id: 661387f572fad002e57cce8f
                        name: block
        '400':
          headers: {}
          content:
            application/json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: query
                        msg: required name
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: object
                  properties:
                    name:
                      type: string
                projection:
                  type: object
                  properties:
                    _id:
                      type: number
                    name:
                      type: number
                skipFields:
                  type: object
                  properties:
                    createdAt:
                      type: number
            examples:
              sampleBodyData:
                value:
                  query:
                    name: school
                  projection:
                    _id: 1
                    name: 1
                  skipFields:
                    createdAt: 1
    parameters: []
  /v1/entities/bulkCreate?type={entity_type}:
    post:
      summary: Bulk creation of entities
      tags:
        - entities-API's
      description: >-
        You can use this API to create bulk create entities based on type and
        CSV file we pass.


        * The API Endpoint for creating bulk entities based on type and CSV file
        we pass. `/v1/entities/bulkCreate`

        * It is mandatory to provide values for parameters which are marked as
        `required`

        * This is a mandatory parameter and cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            To use this API, you require an X-auth-token. This token is
            available in the login API Response.
          required: true
          schema:
            type: string
        - in: query
          name: type
          description: Please pass entity type value for the entity.
          schema: *ref_5
          required: true
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_5
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_6
            type: string
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_6
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_6
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                entities:
                  type: string
                  format: binary
                  description: The CSV file to upload
                translationFile:
                  type: string
                  format: binary
                  description: The JSON file to upload
      responses:
        '200':
          description: Accepted
          content:
            text:
              schema:
                type: array
                items:
                  type: string
              examples:
                SuccessResponse:
                  value: |-
                    "Staff_id",
                    "externalId",
                    "name",
                    "region",
                    "capital",
                    "tenantId",
                    "orgId",
                    "_arrayFields",
                    "_existingKeyField",
                    "_SYSTEM_ID"
                    "",
                    "PBS",
                    "Punjab",
                    "North east",
                    "Chandigarh",
                    "shikshagraha",
                    "blr",
                    "",
                    "externalId",
                    "6679336f61add28f7f681298"
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entities
                        msg: entities file is required
  /v1/entities/bulkUpdate:
    post:
      summary: Bulk updates of entities
      tags:
        - entities-API's
      description: >-
        You can use this API to update entities data based on the type and
        entity id we pass through CSV file  that contain information to update.


        * The API Endpoint for updating entities by passing csv file
        `/v1/entities/bulkUpdate`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          required: true
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
        - in: header
          name: content-type
          description: ''
          schema:
            type: string
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_7
            type: string
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_7
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_7
      responses:
        '200':
          description: ok
          content:
            text:
              schema:
                type: array
                items:
                  type: string
              examples:
                SuccessResponse:
                  value: |-
                    "externalId",
                    "name",
                    "region",
                    "capital",
                    "_arrayFields",
                    "_existingKeyField",
                    "tenantId",
                    "orgId",
                    "_SYSTEM_ID",
                    "UPDATE_STATUS"
                    "entity506",
                    "bijapur",
                    "North east",
                    "Chandigarh",
                    "",
                    "externalId",
                    "shikshagraha",
                    "blr",
                    "6679336f61add28f7f681298",
                    "SUCCESS"
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entities
                        msg: entities file is required
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                entities:
                  type: string
                  format: binary
                  description: The CSV file to upload
                translationFile:
                  type: string
                  format: binary
                  description: The JSON file to upload
        description: ''
  /v1/entities/add?type={entity_type}:
    post:
      summary: Add single entities
      tags:
        - entities-API's
      description: >-
        The API is used to create single entities based on entityType


        * The API Endpoint to create single entities creation based on type
        `/v1/entities/add`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: type
          required: true
          description: Please pass entity type value for the entity.
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: *ref_1
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_1
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_1
      responses:
        '200':
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        metaInformation:
                          type: object
                          properties:
                            targetedEntityTypes:
                              type: array
                              items:
                                type: string
                            externalId:
                              type: string
                            name:
                              type: string
                        childHierarchyPath:
                          type: array
                          items:
                            type: string
                        createdBy:
                          type: string
                        updatedBy:
                          type: string
                        _id:
                          type: string
                        deleted:
                          type: boolean
                        entityTypeId:
                          type: string
                        entityType:
                          type: string
                        registryDetails:
                          type: object
                          properties:
                            locationId:
                              type: string
                            code:
                              type: string
                        userId:
                          type: string
                        tenantId:
                          type: string
                        orgId:
                          type: string
                        updatedAt:
                          type: string
                        createdAt:
                          type: string
                        __v:
                          type: number
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityTypeId
                        msg: 'required entityTypeId '
                      - location: body
                        param: externalId
                        msg: 'required externalId '
                      - location: body
                        param: name
                        msg: 'required name '
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                externalId:
                  type: string
                name:
                  type: string
                childHierarchyPath:
                  type: array
                  items:
                    type: string
                targetedEntityTypes:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  externalId: KA28
                  name: Karnataka
                  childHierarchyPath:
                    - district
                    - block
                    - cluster
                    - school
                  targetedEntityTypes:
                    - state
                    - block
  /v1/entities/details/{_id}?&language={code}:
    get:
      summary: >-
        Provide details of an entity based on the entity id. This API returns
        the details of a single entity at a time.
      tags:
        - entities-API's
      description: >-
        You can use this API to get details based on entity id or externalId.

        * The API to get details of an entities based on entity id:
        `/v1/entities/details`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - in: path
          name: _id
          required: true
          description: Please append a valid entity id or externalId to the Request URL.
          schema:
            type: string
          example: 1
        - in: null
          schema: null
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        metaInformation:
                          type: object
                          properties:
                            targetedEntityTypes:
                              type: array
                              items:
                                type: string
                            externalId:
                              type: string
                            name:
                              type: string
                        childHierarchyPath:
                          type: array
                          items:
                            type: string
                        createdBy:
                          type: string
                        updatedBy:
                          type: string
                        deleted:
                          type: boolean
                        entityTypeId:
                          type: string
                        entityType:
                          type: string
                        registryDetails:
                          type: object
                          properties:
                            code:
                              type: string
                            locationId:
                              type: string
                        tenantId:
                          type: string
                        orgId:
                          type: string
                        updatedAt:
                          type: string
                        createdAt:
                          type: string
                        __v:
                          type: number
                        parentInformation:
                          type: object
                          properties:
                            state:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                  externalId:
                                    type: string
                                  name:
                                    type: string
                            district:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                  externalId:
                                    type: string
                                  name:
                                    type: string
                            block:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                  externalId:
                                    type: string
                                  name:
                                    type: string
                            cluster:
                              type: array
                              items:
                                type: object
                                properties:
                                  _id:
                                    type: string
                                  externalId:
                                    type: string
                                  name:
                                    type: string
              examples:
                example1:
                  value:
                    message: ENTITY_INFORMATION_FETCHED
                    status: 200
                    result:
                      - _id: 6852c9207248c20014b38dd3
                        metaInformation:
                          targetedEntityTypes: []
                          externalId: '16030100406'
                          name: BALARAM BAZAR J. B. SCHOOL
                        childHierarchyPath: []
                        createdBy: '20'
                        updatedBy: '20'
                        deleted: false
                        entityTypeId: 6825915c97b5680013e6a148
                        entityType: school
                        registryDetails:
                          code: '16030100406'
                          locationId: '16030100406'
                        tenantId: shikshalokam
                        orgId: sl
                        updatedAt: '2025-06-18T14:11:49.122Z'
                        createdAt: '2025-06-18T14:11:49.122Z'
                        __v: 0
                        parentInformation:
                          state:
                            - _id: 6852c86c7248c20014b38a4d
                              externalId: '16'
                              name: Tripura
                          district:
                            - _id: 6852c8ae7248c20014b38a50
                              externalId: dhalai
                              name: Dhalai
                          block:
                            - _id: 6852c8de7248c20014b38a61
                              externalId: '160301'
                              name: AMBASSA
                          cluster:
                            - _id: 6852c9027248c20014b38af2
                              externalId: '1603010007'
                              name: BALARAM HIGH SCHOOL
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required state location id
  /v1/entities/update/{_id}:
    post:
      summary: Update an entity
      tags:
        - entities-API's
      description: >-
        You can use this API to update the entity data based on entiy id.

        * The API Endpoint to update single entities :
        `/v1/entities/update/{_id}`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API., which is available in
            the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entities Id to the Request URL.
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_6
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_8
            type: string
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_8
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_8
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      metaInformation:
                        type: object
                        properties:
                          targetedEntityTypes:
                            type: array
                            items:
                              type: string
                          externalId:
                            type: string
                          name:
                            type: string
                      registryDetails:
                        type: object
                        properties:
                          locationId:
                            type: string
                          code:
                            type: string
                      childHierarchyPath:
                        type: array
                        items:
                          type: string
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      deleted:
                        type: boolean
                      _id:
                        type: string
                      entityTypeId:
                        type: string
                      entityType:
                        type: string
                      userId:
                        type: string
                      tenantId:
                        type: string
                      orgId:
                        type: string
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                      __v:
                        type: number
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: externalId
                        msg: required externalId
                      - location: params
                        param: _id
                        msg: required _id
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                metaInformation.targetedEntityTypes:
                  type: array
                  items:
                    type: object
                    properties:
                      entityType:
                        type: string
                      entityTypeId:
                        type: string
                    required:
                      - entityType
                      - entityTypeId
                metaInformation.name:
                  type: string
                childHierarchyPath:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  metaInformation.targetedEntityTypes:
                    - entityType: state
                      entityTypeId: 683953548f365ab56c8022e9
                    - entityType: block
                      entityTypeId: 6839535b8f365ab56c8022ed
                  metaInformation.name: 'Karnataka '
                  childHierarchyPath: []
  /v1/entities/mappingUpload:
    post:
      summary: This endpoint will map its childEntity to its parentEntity
      tags:
        - entities-API's
      description: >-
        You can use this API to map the childEntity to parentEntity


        * The API Endpoint will map its childEntity to its parentEntity
        `/v1/entities/mappingUpload`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: null
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The CSV file to upload
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      success:
                        type: boolean
                      message:
                        type: string
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_INFORMATION_UPDATE
                    status: 200
                    result:
                      success: true
                      message: ENTITY_INFORMATION_UPDATE
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityMap
                        msg: entityMap file is required
  /v1/entities/createMappingCsv:
    post:
      summary: This endpoint will create mapping CSV .
      tags:
        - entities-API's
      description: >-
        You can use this API to create a mapping CSV


        * The API Endpoint will generate a mapping CSV
        `/v1/entities/createMappingCsv`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: null
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_9
            type: string
          required: true
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_9
          required: true
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_9
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The CSV file to upload
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      mappingCSV:
                        type: string
                      resultCSV:
                        type: string
                      parentEntityIds:
                        type: array
                        items:
                          type: string
                      childEntityIds:
                        type: array
                        items:
                          type: string
              examples:
                SuccessResponse:
                  value:
                    message: MAPPING_CSV_GENERATED
                    status: 200
                    result:
                      mappingCSV: >-
                        cGFyZW50RW50aXlJZCxjaGlsZEVudGl0eUlkCjY3OGY0MTZkOWIzMTJlZmY4YTRhMjRhNiw2NzhmNjhiZGNmOWI4MWZmODBjZjMzN2YKNjc4ZjQxNmQ5YjMxMmVmZjhhNGEyNGE3LDY3OGY2OGJkY2Y5YjgxZmY4MGNmMzM4MAo=
                      resultCSV: >-
                        InBhcmVudEVudGl0eUlkIiwiY2hpbGRFbnRpdHlJZCIsInBhcmVudEVudGl0eUlkU3RhdHVzIiwiY2hpbGRFbnRpdHlJZFN0YXR1cyIKIktBUmNsdXN0ZXIxOSIsIm9yZ2wxOTkiLCJFTlRJVFlfRkVUQ0hFRCIsIkVOVElUWV9GRVRDSEVEIgoiS0FSY2x1c3RlcjIwIiwib3JnbDIwMCIsIkVOVElUWV9GRVRDSEVEIiwiRU5USVRZX0ZFVENIRUQi
                      parentEntityIds:
                        - 678f416d9b312eff8a4a24a6
                        - 678f416d9b312eff8a4a24a7
                      childEntityIds:
                        - 678f68bdcf9b81ff80cf337f
                        - 678f68bdcf9b81ff80cf3380
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entityCSV
                        msg: entityCSV file is required
  /v1/entities/listByEntityType/{_id}?page={page_no}&limit={page_limit}:
    get:
      summary: You can use this API to list entity based on id.
      tags:
        - entities-API's
      description: >-
        You can use this API to list entities based on its type


        * The API Endpoint to list entities based on its type:
        `v1/entities/listByEntityType/_id`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entity id to the Request URL.
          schema:
            type: string
          example: 1
        - in: path
          name: page
          description: Please append number for pagination.
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: number of record to limit
          schema:
            type: number
          example: 2
        - in: header
          name: internal-access-token
          description: ''
          schema: null
          required: true
      responses:
        '200':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        externalId:
                          type: string
                        name:
                          type: string
                        locationId:
                          type: string
                        _id:
                          type: string
                      required:
                        - externalId
                        - name
                        - locationId
                        - _id
              examples:
                SuccessResponse:
                  value:
                    message: ASSETS_FETCHED_SUCCESSFULLY
                    status: 200
                    result:
                      - externalId: PBS
                        name: Punjab
                        locationId: ''
                        _id: 6613b8142c7d9408449474bf
                      - externalId: PBS
                        name: Punjab
                        locationId: ''
                        _id: 6613b8f32c7d9408449474c2
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required Entity type
  /v1/entities/find:
    post:
      summary: Find the entities based on queries
      tags:
        - entities-API's
      description: >-
        You can use this API to find entities based on query.


        * The API Endpoint for finding entities based on query:
        `/v1/entities/find`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: null
          required: true
      requestBody:
        content:
          application.json:
            schema:
              type: object
              properties:
                query:
                  type: object
                  properties:
                    metaInformation.externalId:
                      type: string
                projection:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  query:
                    metaInformation.externalId: rajAP
                  projection:
                    - metaInformation.externalId
                    - metaInformation.name
                    - registryDetails.locationId
      responses:
        '200':
          description: created
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        registryDetails:
                          type: object
                          properties:
                            locationId:
                              type: string
                        metaInformation:
                          type: object
                          properties:
                            externalId:
                              type: string
                            name:
                              type: string
              examples:
                SuccessResponse:
                  value:
                    message: ASSETS_FETCHED_SUCCESSFULLY
                    status: 200
                    result:
                      - _id: 66e2b4bd7165395fcea49814
                        registryDetails:
                          locationId: rajAP
                        metaInformation:
                          externalId: rajAP
                          name: RAJANDHRA
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: query
                        msg: required query
    parameters:
      - in: query
        name: page
        description: Page number for pagination
        schema: &ref_10
          type: number
      - in: query
        name: limit
        description: Number of documents to return per page
        schema: *ref_10
      - in: query
        name: search
        description: Optional search string for text-based filtering
        schema: &ref_11
          type: string
      - in: query
        name: aggregateValue
        description: Field path to be used for aggregation
        schema: *ref_11
      - in: query
        name: aggregateStaging
        description: Whether to apply aggregation stages in the pipeline
        schema: &ref_12
          type: boolean
      - in: query
        name: aggregateSort
        description: Whether to apply sorting within the aggregation pipeline
        schema: *ref_12
  /v1/entities/list/_id?page={page_no}&limit={page_limit}&type={entity_type}:
    get:
      summary: List entities based on entity id
      tags:
        - entities-API's
      description: >-
        You can use this API to list the entities based on entity id and entity
        Type


        * The API Endpoint for listing the entities based on entity id and
        entity Type: `/v1/entities/list`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entitie Id to the Request URL.
          schema:
            type: string
          example: 1
        - in: path
          name: page
          description: ''
          schema: null
          required: false
        - in: path
          name: limit
          description: ''
          schema: null
          required: false
        - in: path
          name: type
          description: Please pass entity type value for the entity
          schema: null
          required: true
        - in: header
          name: internal-access-token
          description: ''
          schema: null
          required: true
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            entityType:
                              type: string
                            externalId:
                              type: string
                            label:
                              type: string
                            value:
                              type: string
                      count:
                        type: number
              examples:
                SuccessResponse:
                  value:
                    status: 200
                    result:
                      data:
                        - _id: 627a13928ce12806f5803f57
                          entityType: school
                          externalId: entity123
                          label: undefined - entity123
                          value: 627a13928ce12806f5803f57
                      count: 1
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: query
                        param: type
                        msg: required type
                      - location: params
                        param: _id
                        msg: required entity id
  /v1/entities/relatedEntities/{_id}:
    get:
      summary: Get related entities based on entity id
      tags:
        - entities-API's
      description: >-
        You can use this API to get the realted entities data based on entity id


        * The API Endpoint to get the related entities data based on entity id:
        `/v1/entities/relatedEntities`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null.
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entity Id to the Request URL.
          schema:
            type: string
          example: 1
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      relatedEntities:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            entityTypeId:
                              type: string
                            entityType:
                              type: string
                            metaInformation:
                              type: object
                              properties:
                                externalId:
                                  type: string
                                name:
                                  type: string
                          required:
                            - _id
                            - entityTypeId
                            - entityType
                            - metaInformation
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_FETCHED
                    status: 200
                    result:
                      relatedEntities:
                        - _id: 6613b8142c7d9408449474bf
                          entityTypeId: 661384681797bc00de520555
                          entityType: teacher
                          metaInformation:
                            externalId: PBS
                            name: Punjab
                        - _id: 6613b8f32c7d9408449474c2
                          entityTypeId: 661384681797bc00de520555
                          entityType: school
                          metaInformation:
                            externalId: PBS
                            name: Punjab
        '400':
          description: Bad Request.
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required Entity id
  /v1/entities/listByLocationIds:
    post:
      summary: List the entities based on location id
      tags:
        - entities-API's
      description: >-
        You can use this API to get entities based on locations Id


        * Endpoint to get entities based on locations Id
        `/v1/entities/listByLocationIds`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_13
            type: string
      responses:
        '200':
          description: OK
          content:
            application.json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        entityTypeId:
                          type: string
                        entityType:
                          type: string
                        registryDetails:
                          type: object
                          properties:
                            locationId:
                              type: string
                            code:
                              type: string
                        metaInformation:
                          type: object
                          properties:
                            externalId:
                              type: string
                      required:
                        - _id
                        - entityTypeId
                        - entityType
                        - registryDetails
                        - metaInformation
              examples:
                SuccessResponse:
                  value:
                    message: ENTITY_FETCHED
                    status: 200
                    result:
                      - _id: 5f33c3d85f637784791cd830
                        entityTypeId: 5f32d8228e0dc8312404056e
                        entityType: state
                        metaInformation:
                          externalId: MH
                          name: Maharashtra
                          region: West
                          capital: Mumbai
                        registryDetails:
                          locationId: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
                          code: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
                      - _id: 627a13928ce12806f5803f57
                        entityTypeId: 5f32d8228e0dc8312404056e
                        entityType: block
                        metaInformation:
                          externalId: MH
                          name: Maharashtra
                          region: West
                          capital: Mumbai
                        registryDetails:
                          locationId: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
                          code: db331a8c-b9e2-45f8-b3c0-7ec1e826b6df
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: string
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: locationIds
                        msg: Location ids is required
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                locationIds:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  locationIds:
                    - entity44123
  /v1/entities/subEntityListBasedOnRoleAndLocation/{_id}:
    get:
      summary: List all the entities based on location id
      tags: &ref_14
        - entities-API's
      description: >-
        You can use this API to list entity based on location id

        \*Endpoint to list entity based on location id
        `/v1/entities/subEntityListBasedOnRoleAndLocation`


        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - &ref_15
          name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: _id
          required: true
          description: Please append a valid entity Id To the Request URL
          schema: &ref_16
            type: string
          example: 1
        - &ref_17
          in: header
          name: internal-access-token
          description: ''
          schema: *ref_13
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema: &ref_18
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        childHierarchyPath:
                          type: array
                          items:
                            type: string
                      required:
                        - _id
                        - childHierarchyPath
              examples:
                SuccessResponse:
                  value:
                    message: ENTITIES_CHILD_HIERACHY_PATH
                    status: 200
                    result:
                      - _id: 5fd1b52ab53a6416aaeefb1f
                        childHierarchyPath:
                          - school
                          - cluster
                      - _id: 6153158e5bec1d28882358ab
                        childHierarchyPath:
                          - school
                          - cluster
                          - state
                          - district
                          - beat
                          - block
        '400':
          description: Bad Request.
          content:
            application.json:
              schema: null
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required state location id
  /v1/entities/subEntityList/{_id}?type={entity_type}&search=&page={page_no}&limit={page_limit}&language={code}:
    get:
      summary: Will provide the sub entity based on types
      tags:
        - entities-API's
      description: >-
        This API will help to get entities based on parent id and entity type we
        pass.

        This API will help to get entities based on parent id and entity type we
        pass. \* It is mandatory to provide values for parameters marked with
        `required`


        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: path
          name: page
          description: Please add page number
          schema:
            type: number
          example: 1
        - in: path
          name: limit
          description: number of record to limit
          schema:
            type: number
          example: 2
        - in: path
          name: type
          description: Please pass entity type value for the entity
          schema: *ref_13
        - in: path
          name: serach
          description: ''
          schema: *ref_13
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_13
          required: true
        - in: path
          name: _id
          description: Please append a valid entity id
          schema: *ref_4
          required: true
      responses:
        '200':
          description: ok
          content:
            application.json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            entityType:
                              type: string
                            externalId:
                              type: string
                            label:
                              type: string
                            value:
                              type: string
                            name:
                              type: string
                          required:
                            - _id
                            - entityType
                            - externalId
                            - label
                            - value
                      count:
                        type: number
              examples:
                SuccessResponse:
                  value:
                    status: 200
                    result:
                      data:
                        - _id: 627a13928ce12806f5803f57
                          entityType: school
                          externalId: entity123
                          label: undefined - entity123
                          value: 627a13928ce12806f5803f57
                      count: 1
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: query
                        param: type
                        msg: required type
                      - location: params
                        param: _id
                        msg: required _id
  /v1/entities/listByIds:
    post:
      summary: List the entities based on entity id
      tags:
        - entities-API's
      description: >-
        This API will help to list the entities based on entity id


        * The API Endpoint to list the entities based on entity id
        `/v1/entities/listByIds`

        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
          schema:
            type: string
        - in: header
          name: internal-access-token
          description: ''
          schema: *ref_13
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        entityType:
                          type: string
              examples:
                SuccessResponse:
                  value:
                    message: ENTITIES_FETCHED
                    status: 200
                    result:
                      - _id: 66738b75c05aa58f89ba1300
                        entityType: block
        '400':
          description: 'Bad Request. '
          content:
            application.json:
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: entities
                        msg: required entities
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: object
              properties:
                entities:
                  type: array
                  items:
                    type: string
                fields:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  entities:
                    - 66738b75c05aa58f89ba1300
                  fields:
                    - entityType
  /v1/entities/entityListBasedOnEntityType?entityType={entity_Type}&language={code}:
    get:
      summary: List all the entities based on entity type.
      tags: *ref_14
      description: >-
        You can use this API to list entity based on entity type

        \*Endpoint to list entity based on entity type
        `/v1/entities/entityListBasedOnEntityType?entityType={entity_Type}`


        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - *ref_15
        - in: path
          name: entityType
          required: true
          description: Please pass entity type value for the entity.
          schema: *ref_16
          example: 1
        - *ref_17
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema: *ref_18
              examples:
                SuccessResponse:
                  value:
                    message: ASSETS_FETCHED_SUCCESSFULLY
                    status: 200
                    result:
                      - _id: 6682714d5fb8bc3e93ceae52
                        name: Mysore Rural
                      - _id: 66827210a845ef3e891daf05
                        name: 'T Narasipura '
                      - _id: 668273665fb8bc3e93ceae65
                        name: 'North Chennai '
                      - _id: 668273bda845ef3e891daf15
                        name: 'South Chennai '
                      - _id: 668276d45fb8bc3e93ceaeaf
                        name: 'Bangalore East* '
                      - _id: 6682771aa845ef3e891db070
                        name: 'Bangalore South '
        '400':
          description: Bad Request.
          content:
            application.json:
              schema: null
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: query
                        param: entityType
                        msg: required entityType
  /v1/entities/targetedRoles?{entity_id}:
    get:
      summary: Fetch Targeted Roles
      tags: *ref_14
      description: >-
        You can use this API to fetch targeted roles based on the provided
        entity id in the request parameters.

        \*Endpoint to fetch targeted roles based on the provided entity id
        `/v1/entities/targetedRoles?{entity_id}`


        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      parameters:
        - name: X-auth-token
          in: header
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: false
          schema: *ref_16
        - in: path
          name: entity_id
          description: Please append a valid entity Id to the Request URL.
          schema:
            type: string
          required: true
        - in: query
          name: entityType
          description: >-
            Please append a valid entity type to retrieve the roles associated
            with its higher-level entity types.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Accepted
          content:
            application.json:
              schema:
                $schema: http://json-schema.org/draft-04/schema#
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: number
                            title:
                              type: string
                            user_type:
                              type: number
                            visibility:
                              type: string
                            status:
                              type: string
                            organization_id:
                              type: number
                          required:
                            - id
                            - title
                            - user_type
                            - visibility
                            - status
                            - organization_id
                      count:
                        type: number
              examples:
                SuccessResponse:
                  value:
                    message: ROLES_FETCHED_SUCCESSFULLY
                    status: 200
                    result:
                      data:
                        - id: 13
                          title: AMO
                          user_type: 1
                          visibility: PUBLIC
                          status: ACTIVE
                          organization_id: 1
                        - id: 15
                          title: TEACHER
                          user_type: 1
                          visibility: PUBLIC
                          status: ACTIVE
                          organization_id: 1
                        - id: 10
                          title: headmaster
                          user_type: 1
                          visibility: PUBLIC
                          status: ACTIVE
                          organization_id: 1
                        - id: 14
                          title: BEO
                          user_type: 1
                          visibility: PUBLIC
                          status: ACTIVE
                          organization_id: 1
                      count: 4
        '400':
          description: Bad Request.
          content:
            application.json:
              schema: null
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: The entity ID (_id) is required.
  /v1/userRoleExtension/create:
    post:
      summary: To create a single user role extension data
      description: >-
        You can use this API to to create user role extension data.
        `/v1/userRoleExtension/create`


        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      operationId: ''
      tags: &ref_20
        - userRoleExtension-API's
      parameters:
        - in: header
          name: X-auth-token
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          schema: &ref_21
            type: string
          required: true
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_19
            type: string
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: *ref_19
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_19
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_19
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                value:
                  type: string
                userRoleId:
                  type: string
                code:
                  type: string
                entityTypes:
                  type: array
                  items:
                    type: object
                    properties:
                      entityType:
                        type: string
                      entityTypeId:
                        type: string
            examples:
              sampleBodyData:
                value:
                  title: ' Head Master'
                  value: '19'
                  userRoleId: '777'
                  code: HH
                  entityTypes:
                    - entityType: 'state '
                      entityTypeId: 6764e632073da91041b79aa7
      responses:
        '200':
          description: Accepted
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      _id:
                        type: string
                      deleted:
                        type: boolean
                      userRoleId:
                        type: string
                      title:
                        type: string
                      code:
                        type: string
                      entityTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            entityType:
                              type: string
                            entityTypeId:
                              type: string
                      tenantId:
                        type: string
                      orgId:
                        type: string
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                      __v:
                        type: number
        '400':
          description: Bad Request.
          headers: &ref_23 {}
          content:
            application/json:
              schema:
                $schema: http://json-schema.org/draft-04/schema#
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: array
                    items:
                      type: object
                      properties:
                        location:
                          type: string
                        param:
                          type: string
                        msg:
                          type: string
                      required:
                        - location
                        - param
                        - msg
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: title
                        msg: 'required title '
                      - location: body
                        param: title
                        msg: 'required title '
                      - location: body
                        param: entityTypes[0].entityType
                        msg: 'entityType name '
                      - location: body
                        param: entityTypes[0].entityTypeId
                        msg: 'entityTypeId name '
  /v1/userRoleExtension/update/{_id}:
    post:
      summary: To update a single user role extension data
      description: >-
        You can use this API to update user role extension data by passing id in
        the path param. `/v1/userRoleExtension/update/{_id}`


        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      operationId: ''
      tags: *ref_20
      parameters:
        - in: header
          name: X-auth-token
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          schema: *ref_21
          required: true
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_22
            type: string
          required: true
        - in: header
          name: admin-access-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: *ref_22
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_22
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_22
      requestBody:
        content:
          application/json:
            schema:
              $schema: http://json-schema.org/draft-04/schema#
              type: object
              properties:
                title:
                  type: string
            examples:
              sampleBodyData:
                value:
                  title: Head Master
      responses:
        '200':
          description: Accepted
          headers: *ref_23
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      status:
                        type: string
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      deleted:
                        type: boolean
                      _id:
                        type: string
                      userRoleId:
                        type: string
                      title:
                        type: string
                      code:
                        type: string
                      entityTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            entityType:
                              type: string
                            entityTypeId:
                              type: string
                      tenantId:
                        type: string
                      orgId:
                        type: string
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                      __v:
                        type: number
        '400':
          description: Bad Request.
          headers: *ref_23
          content:
            application/json:
              schema:
                $schema: http://json-schema.org/draft-04/schema#
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: array
                    items:
                      type: object
                      properties:
                        location:
                          type: string
                        param:
                          type: string
                        msg:
                          type: string
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required _id
  /v1/userRoleExtension/find:
    post:
      summary: Find the user role extension data.
      description: >-
        Use this API to get the details of user role extension data based on the
        request body passed. `/v1/userRoleExtension/find`


        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      operationId: ''
      tags: *ref_20
      parameters:
        - in: header
          name: X-auth-token
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          schema: *ref_21
          required: false
        - in: header
          name: internal-access-token
          description: ''
          schema:
            type: string
          required: true
        - in: header
          name: admin-auth-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: &ref_24
            type: string
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_24
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_24
      requestBody:
        content:
          application/json:
            schema:
              $schema: http://json-schema.org/draft-04/schema#
              type: object
              properties:
                query:
                  type: object
                  properties:
                    entityTypes.entityTypeId:
                      type: object
                      properties:
                        $in:
                          type: array
                          items:
                            type: string
                projection:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  query:
                    entityTypes.entityTypeId:
                      $in:
                        - 5f32d8228e0dc8312404056b
                        - 5f32d8228e0dc8312404056c
                        - 5f32d8228e0dc83124040567
                        - 5f32d8228e0dc8312404056e
                  projection:
                    - _id
                    - title
      responses:
        '200':
          description: Accepted
          headers: *ref_23
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
                  result:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        status:
                          type: string
                        createdBy:
                          type: string
                        updatedBy:
                          type: string
                        deleted:
                          type: boolean
                        userRoleId:
                          type: string
                        title:
                          type: string
                        code:
                          type: string
                        entityTypes:
                          type: array
                          items:
                            type: object
                            properties:
                              entityType:
                                type: string
                              entityTypeId:
                                type: string
                        tenantId:
                          type: string
                        orgId:
                          type: string
                        updatedAt:
                          type: string
                        createdAt:
                          type: string
                        __v:
                          type: number
                  count:
                    type: number
        '400':
          description: Bad Request.
          headers: *ref_23
          content:
            application/json:
              schema: *ref_23
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: body
                        param: query
                        msg: required query
  /v1/userRoleExtension/delete:
    delete:
      summary: Delete user role extension data.
      description: >-
        Use this API to delete user role extension data by passing it's id.
        `/v1/userRoleExtension/delete`


        * It is mandatory to provide values for parameters marked with
        `required`

        * Mandatory parameter cannot be empty or null
      operationId: ''
      tags: *ref_20
      parameters:
        - in: header
          name: X-auth-token
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          schema: *ref_21
          required: true
        - in: header
          name: internal-access-token
          description: ''
          schema: &ref_25
            type: string
          required: true
        - in: header
          name: admin-access-token
          description: >-
            This header should be passed when system admin wants to create
            resources
          schema: *ref_25
        - in: header
          name: tenantId
          description: >-
            This header specifies the tenant data of the resource creator. This
            header should be passed when system admin wants to create resources
          schema: *ref_25
        - in: header
          name: orgId
          description: >-
            This header specifies the organization data of the resource creator.
            This header should be passed when system admin wants to create
            resources
          schema: *ref_25
      responses:
        '200':
          description: Accepted
          headers: *ref_23
          content:
            application/json:
              schema:
                $schema: http://json-schema.org/draft-04/schema#
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
              examples:
                SuccessResponse:
                  value:
                    message: USER_ROLE_DELETED
                    status: 200
        '400':
          description: Bad Request.
          headers: *ref_23
          content:
            application/json:
              schema: *ref_23
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required id
  /v1/admin/createIndex/{collection_name}:
    post:
      summary: Find the user role extension data.
      description: >-
        This endpoint allows an admin to create an index for a
        specificollection. The request body should include the keys to be
        indexed.

        * The endpoint allows a user to create an index for a specified

        collection. The request body should include the keys to be indexed is
        `/v1/admin/createIndex`.

        * It is mandatory to provide values for parameters which are marked as

        `required`

        * This is a mandatory parameter and cannot be empty or null.
      operationId: ''
      tags:
        - Admin-API's
      parameters:
        - in: header
          name: X-auth-token
          description: >-
            You require an X-auth-token to use this API. This token is available
            in the login API Response.
          required: true
        - in: header
          name: internal-access-token
          description: You require an internal-access-token to use this API.
          required: true
        - in: header
          name: collection_name
          description: >-
            We need to pass valid collectionName to create an index for a
            specified collection.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                keys:
                  type: array
                  items:
                    type: string
            examples:
              sampleBodyData:
                value:
                  keys:
                    - groups
      responses:
        '200':
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: number
              examples:
                SuccessResponse:
                  value:
                    message: KEYS_INDEXED_SUCCESSFULL
                    status: 200
        '400':
          description: Bad Request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                  message:
                    type: array
                    items:
                      type: object
                      properties:
                        location:
                          type: string
                        param:
                          type: string
                        msg:
                          type: string
                      required:
                        - location
                        - param
                        - msg
              examples:
                FailureResponse:
                  value:
                    status: 400
                    message:
                      - location: params
                        param: _id
                        msg: required collection name
                      - location: body
                        param: keys
                        msg: keys required
  /entity-management/health:
    get:
      description: ''
      operationId: ''
      tags:
        - healthCheck-API
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  ver:
                    type: string
                  ts:
                    type: string
                  params:
                    type: object
                    properties:
                      resmsgid:
                        type: string
                      msgid:
                        type: string
                      status:
                        type: string
                      err:
                        type: 'null'
                      errMsg:
                        type: 'null'
                  status:
                    type: number
                  result:
                    type: object
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                      healthy:
                        type: boolean
                      checks:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            healthy:
                              type: boolean
                            err:
                              type: string
                            errMsg:
                              type: string
                          required:
                            - name
                            - healthy
                            - err
                            - errMsg
              examples:
                example1:
                  value:
                    id: service.health.api
                    ver: '1.0'
                    ts: '2025-07-18T04:34:56.113Z'
                    params:
                      resmsgid: 8e3a9610-6390-11f0-bdd2-0b5dbb3b399b
                      msgid: 8e3a9611-6390-11f0-bdd2-0b5dbb3b399b
                      status: successful
                      err: null
                      errMsg: null
                    status: 200
                    result:
                      name: EntityManagementService
                      version: 1.0.0
                      healthy: true
                      checks:
                        - name: mongodb
                          healthy: true
                          err: ''
                          errMsg: ''
                        - name: UserService
                          healthy: true
                          err: ''
                          errMsg: ''
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  ver:
                    type: string
                  ts:
                    type: string
                  params:
                    type: object
                    properties:
                      resmsgid:
                        type: string
                      msgid:
                        type: string
                      status:
                        type: string
                      err:
                        type: string
                      errMsg:
                        type: string
                  status:
                    type: number
                  result:
                    type: object
                    properties: {}
              examples:
                example1:
                  value:
                    id: entityManagementService.Health.API
                    ver: '1.0'
                    ts: '2025-07-18T04:43:35.352Z'
                    params:
                      resmsgid: c3b82b80-6391-11f0-9617-d554ca31487a
                      msgid: c3b82b81-6391-11f0-9617-d554ca31487a
                      status: failed
                      err: CONFIG_VALIDATION_ERROR
                      errMsg: "Missing 'url' for enabled service: mongodb"
                    status: 400
                    result: {}
tags:
  - name: userRoleExtension-API's
    description: ''
    externalDocs:
      description: ''
      url: ''
  - name: entityType-API's
    description: ''
    externalDocs:
      description: ''
      url: ''
  - name: entities-API's
    description: ''
    externalDocs:
      description: ''
      url: ''
  - name: Admin-API's
    description: ''
  - name: healthCheck-API
    description: ''
    externalDocs:
      description: ''
      url: ''
